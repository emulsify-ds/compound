@use 'colors-used' as *;

// These styles only affect the colors "Usage" page in the component library
.cl-colors {
  padding: 1rem;
}

.cl-colors__list {
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 2rem;
  padding: 0;

  &--card {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,
      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
    text-transform: uppercase;
    font-weight: bold;
  }
}

.cl-colors__item {
  list-style: none;
  padding: 1rem 2rem;
  transition: all 0.4s;
  flex: 1 1 20%;
  min-width: 150px;
  min-height: 150px;
  display: flex;
  justify-content: center;
  align-items: flex-end;

  &--card {
    border: 2px solid white;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    min-height: 200px;
    transition: all 0.15s;

    &:hover {
      box-shadow: 0 3px 10px 0 rgba(0, 0, 0, 0.3),
        0 1px 2px 0 rgba(0, 0, 0, 0.06);
    }
  }
}

.cl-colors__title {
  &--card {
    background: clr(background);
    border-radius: 100px;
    border: 1px solid rgba(0, 0, 0, 0.4);
    line-height: 0.6;
    padding: 8px 1rem;

    span {
      font-size: 0.5rem;
      font-weight: normal;
    }
  }
}

// Dynamically set swatch text color based on the lightness of the background color
@function set-color(
  $color,
  $text-primary: accent-high,
  $text-secondary: muted
) {
  @if (lightness($color) > 50) {
    @return clr($text-primary);
  } @else {
    @return clr($text-secondary);
  }
}

// Style default color swatches
@each $name, $color in $defaultColors {
  .cl-colors__item--default {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color);
    }
  }
}

// Style dark color swatches
@each $name, $color in $darkColors {
  .cl-colors__item--dark {
    &-#{$name} {
      background-color: clr($name);
      color: set-color($color, muted, accent-high);
    }
  }
}
