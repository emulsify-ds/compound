{#
/**
 * Available variables:
 # - table__base_class - base classname of the wrapper.
 # - table__blockname - blockname prepended to the base classname of the wrapper(s) and each component.
 # - table__modifiers - array of modifiers to add to the base classname of the wrapper.
 * - additional_attributes: HTML attributes to apply to the <table> tag.
 * - caption: A localized string for the <caption> tag.
 * - colgroups: Column groups. Each group contains the following properties:
 *   - attributes: HTML attributes to apply to the <col> tag.
 *     Note: Drupal currently supports only one table header row, see
 *     https://www.drupal.org/node/893530 and
 *     http://api.drupal.org/api/drupal/includes!theme.inc/function/theme_table/7#comment-5109.
 * - header: Table header cells. Each cell contains the following properties:
 *   - tag: The HTML tag name to use; either 'th' or 'td'.
 *   - attributes: HTML attributes to apply to the tag.
 *   - content: A localized string for the title of the column.
 *   - field: Field name (required for column sorting).
 *   - sort: Default sort order for this column ("asc" or "desc").
 * - sticky: A flag indicating whether to use a "sticky" table header.
 * - rows: Table rows. Each row contains the following properties:
 *   - attributes: HTML attributes to apply to the <tr> tag.
 *   - data: Table cells.
 *   - no_striping: A flag indicating that the row should receive no
 *     'even / odd' styling. Defaults to FALSE.
 *   - cells: Table cells of the row. Each cell contains the following keys:
 *     - tag: The HTML tag name to use; either 'th' or 'td'.
 *     - attributes: Any HTML attributes, such as "colspan", to apply to the
 *       table cell.
 *     - content: The string to display in the table cell.
 *     - active_table_sort: A boolean indicating whether the cell is the active
         table sort.
 * - footer: Table footer rows, in the same format as the rows variable.
 * - empty: The message to display in an extra row if table does not have
 *   any rows.
 * - no_striping: A boolean indicating that the row should receive no striping.
 * - header_columns: The number of columns in the header.
 *
 */
#}
{% set table__base_class = table__base_class|default('table') %}
{% set table__blockname = table__blockname|default([]) %}
{% set table__modifiers = table__modifiers|default([]) %}
{% set table__attributes = table__attributes|default({
  'class': bem(table__base_class, table__modifiers, table__blockname),
}) %}

{% if attributes %}
  {% set table__attributes = table__attributes|merge(attributes) %}
{% endif %}

<table {{ add_attributes(table__attributes) }}>
  {% if caption %}
    <caption>{{ caption }}</caption>
  {% endif %}

  {% for colgroup in colgroups %}
    {% if colgroup.cols %}
      <colgroup {{ colgroup.attributes }}>
        {% for col in colgroup.cols %}
          <col {{ col.attributes }} />
        {% endfor %}
      </colgroup>
    {% else %}
      <colgroup {{ colgroup.attributes }} />
    {% endif %}
  {% endfor %}

  {% if header %}
    <thead {{ bem('header', [], table__base_class) }}>
      <tr>
        {% for cell in header %}
          {% set table__header_cell__attributes = {
            'class': bem('heading-cell', [], table__base_class),
          } %}
          {% if cell.attributes %}
            {% set table__header_cell__attributes = table__header_cell__attributes|merge(cell.attributes) %}
          {% endif %}
          <{{cell.tag}} {{ add_attributes(table__header_cell__attributes) }}>
            {{- cell.content -}}
          </{{cell.tag}}>
        {% endfor %}
      </tr>
    </thead>
  {% endif %}

  {% if rows %}
    <tbody>
      {% for row in rows %}
        <tr {{ bem('row', [], table__base_class) }}>
          {% for cell in row.cells %}
            {% set table__cell__attributes = {
              'class': bem('cell', [], table__base_class),
            } %}
            {% if cell.attributes %}
              {% set table__cell__attributes = table__cell__attributes|merge(cell.attributes) %}
            {% endif %}
            <{{cell.tag}} {{ add_attributes(table__cell__attributes) }}>
              {{- cell.content -}}
            </{{cell.tag}}>
          {% endfor %}
        </tr>
      {% endfor %}
    </tbody>
  {% elseif empty %}
    <tbody>
      <tr {{ bem('row', [], table__base_class) }}>
        <td colspan="{{ header_columns }}" {{ bem('cell', [], table__base_class) }}>{{ empty }}</td>
      </tr>
    </tbody>
  {% endif %}

  {% if footer %}
    <tfoot {{ bem('footer', [], table__base_class) }}>
      <tr>
        {% for cell in footer %}
          {% set table__footer_cell__attributes = {
            'class': bem('footer-cell', [], table__base_class),
          } %}
          {% if cell.attributes %}
            {% set table__footer_cell__attributes = table__footer_cell__attributes|merge(cell.attributes) %}
          {% endif %}
          <{{cell.tag}} {{ add_attributes(table__footer_cell__attributes) }}>
            {{- cell.content -}}
          </{{cell.tag}}>
        {% endfor %}
      </tr>
    </tfoot>
  {% endif %}
</table>
